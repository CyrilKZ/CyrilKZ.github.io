{
  "total": 2,
  "all": [
    {
      "valid": false
    }, {
      "valid": true,
      "index": 1,
      "title": "基于CodeMirror构建Vue单文件组件",
      "subTitle": "介绍CodeMirror的基本原理，根据此原理构建Vue单文件组件（支持双向绑定和动态模块引入）",
      "dateTime": "2020-02-06 00:33",
      "keywords": ["CodeMirror", "Vue"],
      "color": "light-green",
      "category": "web前端",
      "related": [2, 3]
    }, {
      "valid": true,
      "index": 2,
      "title": "在Vue组件中解析渲染markdown文档",
      "subTitle": "利用Markdown-it生成.md文档的语法token流，利用token流递归生成并遍历抽象语法树，并调用Vue的渲染函数递归生成节点",
      "dateTime": "2020-02-06 19:15",
      "keywords": ["Markdwon", "Markdown-it", "Vue"],
      "color": "light-green",
      "category": "web前端",
      "related": [1, 3]
    }, {
      "valid": true,
      "index": 3,
      "title": "这个网站是如何建成的：使用Vuetify建立个人主页",
      "subTitle": "把之前两篇文章中自造的组件投入应用，使用Vue-cli3+Vuetify快速建立Material Design风格的站点，动态加载博客配置文件和Markdown格式的文章",
      "dateTime": "2020-02-06 21:48",
      "keywords": ["Vuetify", "Vue-cli3", "个人主页"],
      "color": "blue",
      "category": "web前端",
      "related": [1, 2]
    }, {
      "valid": true,
      "index": 4,
      "title": "[CSGO对战平台搭建 | 0]从0开始的工作",
      "subTitle": "从安装Linux服务器系统开始搭建一个CSGO的对战平台，利用了Valve提供的CSGO服务端、来自Steam开发者社区的SourceMod/MetaMod插件开发工具链和Python3+Django",
      "dateTime": "2020-02-16 02:38",
      "keywords": ["Python/Django", "游戏对战平台", "CS:GO"],
      "color": "orange",
      "category": "后端与数据库",
      "related": []
    }
  ],
  "featured": [1, 2, 3],
  "category": [
    {
      "name": "web前端",
      "include": [1, 2, 3]
    }, {
      "name": "后端与数据库",
      "include": [4]
    }
  ]
}